# -*- coding: utf-8 -*-
"""train_model.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qWTBrkZ5Iz8UZ3UcTz-ikC5M9iyl4TGw
"""

import pandas as pd
import joblib
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

def train_model(X_train_path, y_train_path, model_output):
    """
    Train linear regression model

    Args:
        X_train_path (str): Path to training features
        y_train_path (str): Path to training target
        model_output (str): Path to save trained model
    """
    # Load data
    X_train = pd.read_csv(X_train_path)
    y_train = pd.read_csv(y_train_path).values.ravel()

    # Train model
    model = LinearRegression()
    model.fit(X_train, y_train)

    # Evaluate on training set
    y_pred = model.predict(X_train)
    mse = mean_squared_error(y_train, y_pred)
    r2 = r2_score(y_train, y_pred)

    print("Training performance:")
    print(f"MSE: {mse:.4f}")
    print(f"R-squared: {r2:.4f}")

    # Save model
    joblib.dump(model, model_output)
    print(f"Model saved to {model_output}")

if __name__ == "__main__":
    import argparse
    parser = argparse.ArgumentParser()
    parser.add_argument('--X_train', type=str, default='data/processed/X_train.csv',
                       help='Path to training features CSV')
    parser.add_argument('--y_train', type=str, default='data/processed/y_train.csv',
                       help='Path to training target CSV')
    parser.add_argument('--output', type=str, default='models/linear_regression.pkl',
                       help='Path to save trained model')
    args = parser.parse_args()

    train_model(args.X_train, args.y_train, args.output)